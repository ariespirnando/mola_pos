import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: colorScheme.onPrimary.withOpacity(1),
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(16.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: colorScheme.primary,
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(16.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.gray40001,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.blueGray800,
          fontSize: 16.fSize,
          fontFamily: 'Rubik',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.blueGray800.withOpacity(0.53),
          fontSize: 12.fSize,
          fontFamily: 'Rubik',
          fontWeight: FontWeight.w400,
        ),
        headlineMedium: TextStyle(
          color: appTheme.blueGray800,
          fontSize: 28.fSize,
          fontFamily: 'Rubik',
          fontWeight: FontWeight.w300,
        ),
        headlineSmall: TextStyle(
          color: colorScheme.primary.withOpacity(0.42),
          fontSize: 24.fSize,
          fontFamily: 'Rubik',
          fontWeight: FontWeight.w500,
        ),
        labelLarge: TextStyle(
          color: appTheme.blueGray800,
          fontSize: 12.fSize,
          fontFamily: 'Rubik',
          fontWeight: FontWeight.w500,
        ),
        titleLarge: TextStyle(
          color: colorScheme.primary,
          fontSize: 22.fSize,
          fontFamily: 'Rubik',
          fontWeight: FontWeight.w500,
        ),
        titleMedium: TextStyle(
          color: appTheme.blueGray800,
          fontSize: 16.fSize,
          fontFamily: 'Rubik',
          fontWeight: FontWeight.w500,
        ),
        titleSmall: TextStyle(
          color: appTheme.blueGray800,
          fontSize: 14.fSize,
          fontFamily: 'Rubik',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF1A72DD),
    secondaryContainer: Color(0XFF0052D4),

    // On colors(text colors)
    onPrimary: Color(0X19FFFFFF),
    onPrimaryContainer: Color(0XFF262F56),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF000000);

  // Blue
  Color get blue300 => Color(0XFF6FB1FC);
  Color get blue30033 => Color(0X336CAAFC);
  Color get blue700 => Color(0XFF1369D1);
  Color get blue70001 => Color(0XFF147AD6);
  Color get blue70002 => Color(0XFF2171C6);
  Color get blue70019 => Color(0X191268D1);
  Color get blue7001901 => Color(0X191369D2);
  Color get blue7001902 => Color(0X191479D3);
  Color get blue800 => Color(0XFF0D62C9);
  Color get blueA200 => Color(0XFF438BE2);

  // BlueGray
  Color get blueGray100 => Color(0XFFD1D1D1);
  Color get blueGray800 => Color(0XFF2A3256);

  // BlueGraya
  Color get blueGray4005a => Color(0X5A7388A9);

  // Cyan
  Color get cyan200 => Color(0XFF78D2DE);

  // DeepOrange
  Color get deepOrangeA700 => Color(0XFFF4261A);

  // DeepPurple
  Color get deepPurpleA200 => Color(0XFF8E54E9);
  Color get deepPurpleA20033 => Color(0X338A57E9);

  // Gray
  Color get gray100 => Color(0XFFF4F4F4);
  Color get gray10001 => Color(0XFFF6F6F6);
  Color get gray10002 => Color(0XFFF6F7F9);
  Color get gray300 => Color(0XFFDDDDDD);
  Color get gray400 => Color(0XFFC4C4C4);
  Color get gray40001 => Color(0XFFBDBDBD);
  Color get gray50 => Color(0XFFF7F8FA);
  Color get gray500 => Color(0XFF979797);
  Color get gray700 => Color(0XFF5F6368);

  // Indigo
  Color get indigoA200 => Color(0XFF4776E6);
  Color get indigoA400 => Color(0XFF4364F7);

  // Pink
  Color get pink500 => Color(0XFFEC008C);

  // Red
  Color get red300 => Color(0XFFEC6666);
  Color get red30001 => Color(0XFFFC6767);
  Color get red600 => Color(0XFFEE2A23);
  Color get redA100 => Color(0XFFFE8D74);
  Color get redA20033 => Color(0X33FC6369);

  // Yellow
  Color get yellow600 => Color(0XFFF8CF33);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
